[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llm-router"
dynamic = ["version"]
description = "Hybrid LLM Router backed by semantic prompt analysis and LLM-assisted fallback decision making"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = [
    { name = "Brent", email = "brentsworks@gmail.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "sentence-transformers>=2.2.0",
    "numpy>=1.21.0",
    "pinecone>=7.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "hypothesis>=6.0.0",
    "factory-boy>=3.2.0",
    "faker>=18.0.0",
]
dev = [
    "llm-router[test]",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
api = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "httpx>=0.24.0",
    "rich>=13.0.0",
]
ml = [
    "sentence-transformers>=2.2.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "chromadb>=0.4.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/llm-router"
"Bug Reports" = "https://github.com/yourusername/llm-router/issues"
"Source" = "https://github.com/yourusername/llm-router"

[tool.hatch.version]
path = "llm_router/__init__.py"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=llm_router",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=90",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "slow: Slow tests",
]

[tool.coverage.run]
source = ["llm_router"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "llm_router/utils.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["llm_router"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
